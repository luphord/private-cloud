version: '2.1'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.${HOST:?HOST variable not set in .env}`)"
  blanket:
    image: luphord/blanketdb:0.4.0
    labels:
      - "traefik.http.routers.blanketdb.rule=Host(`blanketdb.${HOST:?HOST variable not set in .env}`)"
  fossil:
    image: duvel/fossil:2.10
    entrypoint: /usr/bin/fossil server --repolist --user admin /opt/fossil --baseurl http://fossil.${HOST:?HOST variable not set in .env}/
    volumes:
      - /tmp/mytest:/opt/fossil
    labels:
      - "traefik.http.routers.fossil.rule=Host(`fossil.${HOST:?HOST variable not set in .env}`)"
  metime:
    build: ./metime
    labels:
      - "traefik.http.routers.metime.rule=Host(`metime.${HOST:?HOST variable not set in .env}`)"